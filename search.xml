<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[元学习践行三部曲之编程]]></title>
      <url>%2F2025%2F09%2F05%2F%E6%96%B9%E6%B3%95%E8%AE%BA-%E5%85%83%E5%AD%A6%E4%B9%A0%E8%B7%B5%E8%A1%8C%E4%B8%89%E9%83%A8%E6%9B%B2%E4%B9%8B%E7%BC%96%E7%A8%8B%2F</url>
      <content type="text"><![CDATA[给自己设计游戏规则和边界，不断地获得正反馈。 一、进入新手村STEP1:建立对学习内容的基本认知比如学习编程。 编程就是自动地解决问题： 观察一件事情输入了什么，导致输出了什么 思考事情可以重复被做的方法 不要期待错误的方法能够得到正确的结果 STEP2:拼出学习内容学习不是登山，而是拼图。因为对于一个全新的学习内容，人的大脑没有办法用未知解决未知。可以先不用左脑的逻辑分析模式，而是用右脑模式去感知所学内容，形成一个大致的外貌。抓全局，这样才不至于发生由入门到放弃的悲剧。心理学对拖延症的解释就是：害怕失败，追求完美。Xdite战胜拖延症的方法：骗骗自己，只是随便玩玩。 理论依据：认知心理学、“拼图理论” 学习要有成就感，要让自己停不下来。 比如学习编程，应该先快速把东西拼出来，拼一个大东西，然后公开给朋友，接受朋友的赞美，得到正向回馈。而不是苦逼的把一本书从头看到尾。 [练习与资源] 推荐书籍《创造力培训：像艺术家一样思考》 用右脑模式画画练习：拿出自己的照片，倒着画自画像 STEP3:抢在放弃之前建立正循环建立正循环： 模仿——小项目——大项目——发布——激励 “玩手游”三步：执行任务，获得新手技能——熟悉掌握——不断获得奖励，沉浸其中。 “学编程”三步：快速把东西拼出来——拼出更大的东西——公开并享受称赞。 理论依据：通过不断的正向反馈能过获得成就感 认知心理学理论：不断的重复训练可以形成肌肉记忆，把工作记忆存储到长期记忆中。 提出左右脑配合的肌肉快速入门法。通过先用右脑感知，模仿，熟悉基本框架，再放左脑出来理性分析。 XDite批判了自学效率低的四个大坑： 必须有天赋 必须要看懂每一个步骤，才能往前进 学习必须要扎实，要从技术原理开始学起 学习当中禁止用一切捷径，比如说复制粘贴代码，模仿别人的程序。 初始加速度一定要大，不断地获得成就感；熟悉框架后需要复习时才适合用以上四个大坑。 [练习与资源] 用iPad 玩swift playground 儿童学习编程软件 scratch 二、晋级高级新手STEP1:获得高频小套路付费寻找要学习领域的专家级高手，获得一个“高频小套路”，即这个领域20个最常用的动作，或核心知识，形成对一个领域的框架 找出一本实做型的入门指南。最好三天内可以搞定，写完一个小项目。翻开书，直接跳到最后的项目，快速做3遍： 第一遍： 复制项目代码； 第二遍： 跟着打代码，熟悉基本工具，阅读错误信息，学会Debug； 第三遍， 分析打错的，为什么会错。体会输入什么，就会得到什么。把懂的，不懂的，都背下来。 还有独门秘籍：用markdown把自己特别傻逼犯错的地方记下来，把正确的解法也记下来，然后公开发表。同时，自己也背下来。 STEP2:加速全盘模仿学习新技能的时候初速度一定要快，最快的方法就是左右脑配合。“分散模式”和“专注模式”交替进行。不问理由的全盘模仿。 STEP3:大量重复练习大脑善于调出过去的记忆对事情进行判断，但大脑不能用未知理解未知，因为理解是记忆的相关连接。所以对于新知，大脑很难理解，因为大脑无法调出相关记忆。从这个角度来说，大脑对于新领域是不善于思考的。对策就是：利用高频小套路，全盘模仿，进行大量练习，形成肌肉（长期）记忆。 所以，人人可以通过高频小套路，快速成为高级新手或胜任者 XDite提到了德雷福斯模型，新手—高级新手—胜任者—精通者—专家。其实市面上大于50%的都是高级新手。任何人只要有一份高频小套路的SOP，都快速成为高级新手甚至胜人者，可以入行得到一份职位。所以，同学们，希望是大大的有啊！XDite 还提醒我们专家都不是靠坚持得来的，而是上瘾和停不下来。要运用游戏化机制，行动——回馈——不确定的回馈，让自己上瘾。并呼吁大家一定要养成上瘾的习惯。 这一点，我可以胜任，通宵打游戏，用虚拟人生复刻自己小时候的社区，连夜追韩剧，看小说，我，你都可以的。 [练习与资源] （修改为自己设计的资源） 编程入门方法:选一本实做型教材，做三遍； Xdite 推荐:《Rails bridge :intro to rails》 三、跨越到专家德雷福斯模型表达了专业技能的五个层级。 从低级到高级是：新手——高级新手——胜任者——精通者——专家 （在《程序员思维修炼》中有具体阐述）75%以上的从业者都处于新手和高级新手的层次。“一万小时理论”只适用于不断精进自己能力的练习，一年的经验重复十年是没有用的。那么如何从新手和高级新手跨越到人数稀少的专家行列呢？ A way:成瘾 高级新手以上的大牛的字典里是没有“坚持”二字的，他们只是上瘾了。成瘾的方法是：有明确的目标，时时得到正反馈，形成正循环。 将学习游戏化 将机械式行为游戏化，这样可以避免常规学习方式的无刺激感 游戏比日常习惯有更强力的刺激 游戏历程： 发现一个新游戏——用户开始玩——用户知道规则后，达成多个胜利状态——弃玩 模仿游戏的设计方法设计自己的学习模式 游戏是建立习惯的系统性公式：形成习惯回路——形成惯性行为——得到回报——直接相关人得到奖励 Behavior= Motive+Ability+Trigger 游戏让用户上瘾的方法是：奖励的大小、奖励出现的时间、奖励的内容是随机的 不要害怕上瘾 很多杰出的专家，身上都有的模式：各个都是瘾君子，很容易上瘾。大师是成瘾到停不下来的人。上瘾是高生产力、大进步的方式，保持容易成瘾的状态、迅速闯过高级新手这一关。 奖励自己 设计奖励 所谓兴趣，是行为得到奖励后的产物。帮助自己来实现自我。让学到的内容得到奖励的方法：讲给别人、教会别人、得到一个演出的机会，获得商业价值等。也就是实现自我价值。 降低行动门槛，不断自我实现。 人的行为可以被设计：Behavior= Motive+Ability+Trigger 不止游戏，类比好多商家营销、公司奖金、工资设计，创造上瘾的学习方式]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[项目实战-微信小程序-商城]]></title>
      <url>%2F2017%2F02%2F01%2F%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E5%95%86%E5%9F%8E%2F</url>
      <content type="text"><![CDATA[写在前面本人是个初学者，2016年9月份开始接触编程，真正确定自学编程是10月份的事情，正好赶上微信小程序开发热潮，所以就以它为主要学习目标。 这个小作品是个人学习用，仅供学习参考！ 欢迎前辈朋友给予指正问题和不足，也感谢鼓励，谢谢！ github地址：https://github.com/iamsongpeng/mini-program-store 待完善内容： 动态绑定标题 页面内刷新内容 马上购物和加入购物车按钮实现：sku商品组合 Sku算法，Android实现，淘宝Sku实现 LeanCloud 数据库更新，不合理之处修正修正 分类页背景颜色变化效果制作 最新页和最热页制作 购物车demo优化，逻辑层完善 我的页demo优化，逻辑层完善 新增地址页：省市区数据制作，逻辑层完善 微信小程序商城demo(模仿”Coolbuy玩物志”小程序)首页 分类页 分类详情页 详情页 详情页，加入购物车弹窗 购物车 我的页，我的订单 我的页，地址管理 新增地址 主要思路待更新]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[ORID-写日记的好方法]]></title>
      <url>%2F2016%2F12%2F08%2FORID-%E6%97%A5%E8%AE%B0-%E9%80%BB%E8%BE%91-%E7%BB%83%E4%B9%A0-%E6%80%9D%E8%80%83%E6%A1%86%E6%9E%B6%2F</url>
      <content type="text"><![CDATA[Objective关于今天的工作，你记得什么？ 完成了什么？Reflective你要如何形容今天的情绪？今天的高峰是什么？今天的低点是什么？Interpretive我们今天学到了什么？今天一个重要的领悟是什么？Decisional我们会如何用一句话形容今天的工作？有哪些工作需要明天继续努力？另，遇到生活中的 “bug” ，就是做错的事，记下来为什么会发生这个的原因我做错了什么正确又该怎么做]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[项目实战-JavaScript DOM编程艺术]]></title>
      <url>%2F2016%2F12%2F08%2F%E5%85%83%E5%AD%A6%E4%B9%A0-%E7%BC%96%E7%A8%8B-JavaScript%20DOM%E7%BC%96%E7%A8%8B%E8%89%BA%E6%9C%AF%EF%BC%88%E7%AC%AC2%E7%89%88%EF%BC%89%2F</url>
      <content type="text"><![CDATA[要求：这个实战项目适合刚开始接触 HTML、CSS 和 JavaScript DOM 的朋友。 本人强烈不推荐登山学习法学习任何技能，因为用这种方法的人，基本上都是从入门到放弃，然后再次从入门到放弃，最后怀疑人生！ 本人强烈推荐拼图学习方法，找到学习这门技能的不同“图块儿”，直接开始实战，在战争中学习战争，三步曲： 第一步 下载项目代码 点击文件夹中的 index.html 文件。在自己的设备上运行起来，直接上图： 小小的成就感就这么到来了！有点小激动呢！继续…… 如果遇到问题，咋办？用搜索引擎。关于怎么更有效地利用搜索引擎，知乎：《如何用好 Google 等搜索引擎？》 如果搜索引擎解决不了，那么找人。 第二步动手临摹一遍，一个个文件建立起来，一行行代码敲出来。 不要小瞧这一步，虽然是临摹，但你不一定能看到第一步中看到的结果。 这是为什么呢？不信你就试试看！ 具体步骤，把书买来，直接跳到12章，跟着书中的步骤，照着下载下来的代码敲！ 浏览器推荐使用Chrome，并使用自带开发工具，按F12按键开启，debug！ 第三步DIY，修改也好，东拼西凑也好，把它做成你想要的样子！ 看不顺眼的地方，改！ 看到别人家的某些地方好，照着改！ 实战过程学习：http://www.jianshu.com/p/385551d15a67，更新到文章里 你可能会疑惑，我举个例子你就明白了 想想你是如何学会走路的。好像并没有人告诉你先迈哪只脚？需要用多少牛的力？抬起多少厘米？左手右手怎样摆动？摆动幅度…… 在想想你是如何学会做菜的。好像并没有告诉你需要用什么材质的锅？放多少克油盐酱醋和花椒大料？多少温度的火…… 正因如此，哪怕《JavaScript DOM编程艺术(第2版)》这本书你一页没看过也没关系，咱们先从最后一章综合实例直接开始实战。 参考资料： 示例代码来自：《JavaScript DOM编程艺术(第2版)》 郑伊延（XDite）老师在新生大学开设的元学习课]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[素材-链接]]></title>
      <url>%2F2016%2F12%2F07%2F%E7%B4%A0%E6%9D%90-%E8%B5%84%E6%BA%90-%E9%93%BE%E6%8E%A5%2F</url>
      <content type="text"><![CDATA[学习方法论 元学习： 电子书：《How To Ask Questions The Smart Way》 健身 条件允许的前提，找个靠谱专业健身教练 书籍《无器械健身:用自身体重锻练》 设计 http://huaban.com/ https://www.pinterest.com/ 字体设计，播客：字谈字畅 视频：《How the Economic Machine Works》 《如何成为一名优秀的设计师：罗子雄@TEDxChongqing》 播客：《Anyway.fm*设计杂谈》 电子书：《Economic Principles》 电子书：《Producter》 周楷雯（kevinzhow） icon：http://www.iconfont.cn/ IT播客 《IT 公论》 卓老板聊科技，“喜马拉雅”或者“得到”收听 JavaScript（包括HTML、CSS） JavaScript | MDN,为什么首先推荐它呢？曾任Mozilla公司首席首席技术官的Brendan Eich是JavaScript主要创造者与架构师。这个是 Mozilla 开发者网络社区的学习资料，比W3school 要好，对于疏通JavaScript很有益处。 ECMAScript 6 入门，阮老师的这个网站不要错过。 JavaScript频道，InfoQ是一家国际技术媒体，虽然网站不是很漂亮，但是内容大于样式。 ，最近发现了一个高质量的前端社区，聚集了很多各大公司前端牛人，里面的干货很多，不过这个网站需要注册码才可以注册，但是假如仅仅是阅读上面的文章，不需要注册码也是可以的。见图：页面很简洁，还有阅读效果很好。 前端乱炖, 最专业的前端技术内容社区，这个网站是我去得很多的一个网站，里面有一个专栏模块，用于展示各种原创文章，原创翻译文章，知识性比较强，内容比较专业和系统。这个网站的特点是更新较多，同时大大也很多。 CNode：Node.js专业中文社区，想学习Nodejs吗？那么这个网站很建议你去，而且里面的人很友善，或者说彼此交流学习的氛围超级好，这个社区是由 @朴灵他们创办的。 技术文章 FEX 做最专业的前端，百度FEX一直很牛逼，FEX 是百度「Web 前端研发部」的内部名称，其中 FE 是 FrontEnd的缩写，X代表他们不仅关注前端技术，还更重视全端及全栈的能力。开源项目很多。很多思想值得我们学习。 ，接着来一个国外的，里面新东西很多，不过全部是英文的，有点考验你的英语阅读能力。（这个不符合题目要求，但还是推荐一下） Issues · xufei/blog · GitHub，@徐飞 是我所知，国内研究angular很透彻的一个人，github 博客上面关于angular的精华分享很多，文章讲的很透彻，每一次他出文章，一般都会认真读一遍，很受益的 夏天的森林 - 博客园，夏天的森林，博客形式主要以“连载”为主，不得不说，你的花一些时间去学习，看过之后能够对于JavaScript的某一些方面有很深的理解 汤姆大叔 - 博客园，应该很多搞前端的人都看过汤姆大叔的书，他的博客园里面东西很多很多，值得常去看看。 JavaScript 秘密花园，超级推荐这个,JavaScript秘密花园是一个不断更新的文档，主要关心JavaScript一些古怪用法。对于如何避免常见的错误，难以发现的问题，以及性能问题和不好的实践给出建议， 初学者可以籍此深入了解JavaScript的语言特性。 我又来推荐这个代码的打怪升级网站，主要你可以用它来练习你的JavaScript，对于提高你的JavaScript编程能力是很重要的。同时对于你英语能力的提高是很重要的。 前端网址导航，当你看到这里来了，证明这个才是好东西，简历ctrl+d，前端导航网站，分类不错，小东西很多。 淘宝前端团队（FED） Web 开发者路线图 《一起学 Node.js》 前端资源教程 http://cnodejs.org/topic/56ef3edd532839c33a99d00e 从零开始构建 JavaScript 技术栈 React 技术栈系列教程，这个是中文教程，同时看最新动态的英文原出处资料 前端开发者手册 微信 微信开发者社区 微信小程序论坛：http://www.wxapp-union.com/ 微信小程序论坛：http://www.wxappclub.com/ 《微信小程序第一次官方公开课图片文字直播》 微信小程序：知晓程序 微信小程序：GetWeApp-微信小程序学习社群 微博登陆，支付宝付款：http://www.stuq.org/ ruby ruby-china.org ———未整理——————————————— https://github.com/xirong/my-git/blob/master/how-to-use-github.md 技术论坛：www.v2ex.com Flarum 是一款优雅简洁论坛软件。让在线交流变得更加轻松愉快。移动/WEB。http://flarum.org.cn/ 知乎：《如何用好 Google 等搜索引擎？》 hexo主题 git相关博客文章 MacTalk-池建强的随想录 i5ting 全栈工程师之路-Node.js i5ting，cnodejs前端资源教程 i5ting，cnodejsJavaScript 资源大全中文版 [segmentfault]{https://segmentfault.com) http://edu.csdn.net/course/detail/3149 小木学堂： 购买渠道：http://edu.csdn.net/mycourse http://xiaomuedu.com/ 廖雪峰：http://www.liaoxuefeng.com/ 慕课网：http://www.imooc.com/ 课程：http://www.imooc.com/video/6689 https://nodejs.org http://www.npmjs.com/ github stackoverflow.com 问答社区，找答案或提问题有大牛刷赞回复 看雪 钟馗之眼 余弦博客 Vamei：http://www.cnblogs.com/vamei http://taiwan.chtsai.org/ http://daringfireball.net/ http://www.zonaeuropa.com/weblog.htm http://www.kottke.org/ http://www.niemanlab.org/2013/12/the-blog-is-dead/ http://blog.zhowkev.in/]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[项目实战-微信小程序-新手另类上手方法]]></title>
      <url>%2F2016%2F12%2F03%2F%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E6%96%B0%E6%89%8B%E5%8F%A6%E7%B1%BB%E4%B8%8A%E6%89%8B%E6%96%B9%E6%B3%95%2F</url>
      <content type="text"><![CDATA[学习更有效率=足够好的方法论+花费我的命+认识到认知偏差 方法论需要不断寻找收集，如果把大脑类比为计算机，那么我们要将学习到的更好的方法论更新到自己的系统里； 命=时间_ ，说白了就是你愿不愿意拿出你的一部分生命放在学习某个技能上； 认知偏差，比如说大部分常见的、我们知道的、觉得难学的技能，并没有想象中那么难（我可没说简单），需要你花费一部分生命的，你愿意么？ 陪伴在路上的全栈工程师！ 一、第一篇文章摘录 《新人上手 Python 另类建议——被和谐了的答案》 文章摘自微信公众号「Lazy-Thought」懒人在思考 几个黑客在维护，都很懒，都想改变点什么 “前晚在知乎心血来潮做了个回答，昨天凌晨就被和谐了，被和谐的原因是： 涉及淫秽色情低俗信息 那个网站在国内存在了很久很久，尺度大了点罢。我把原回答放到这，大家自己判断吧：基于 Scrapy 你写个爬虫，爬 rosioo.com，很简单，但是，需要会员的部分就需要动点小技巧了，你先爬，有机会我告诉你… 动力有了没？不难了吧？ 一本正经下： 动力是做好任何事务的前提，我记得大学时，C那本书我看了N遍，然而我还是不熟C，原因很简单，当时没找到我感兴趣的实战场景。你可以想象下，当年大学编程教程里的那些例子具备多大的创新杀伤力，索然无味（不知道现在是否有所改善）。 真正让我有突破在于，我用掌握的语言去做了些感兴趣的“坏”事，打破规则的事。 当你对这个世界越发了解时，你就拥有常人无法比拟的想象力，这种想象力是你动力的源泉。很多人停滞迷茫的最本质就在这。这就是为什么很多过来人会说： 你最大的问题是想得太多，而做得太少。 或者 想象力成为你前进的最大瓶颈。 可以好好琢磨琢磨下，这两句话。 ……” 阅读原文 二、第二篇文章摘录 《如何在五天内快速 “学会” 一门技能》 微信公众号 「xinshengdaxue」 新生大学 学习学习再学习，七年就是一辈子…… “方法我先讲结论方法。 假设你初入门，要去学一门技术。那么： How：去找专家的 “实作方法” 课、“实作方法” 书，快速地跟着 TA 做。（请先一模一样地跟着做，不要自作聪明地改，也不要去问为什么。） What：接着把 “成果” 做一点小修改，看看会不会有效果。 Why：把东西改得有效果了以后，再去查 Why。 五天都重复这样的循环，你就会了，至少能掌握这门学问的 60%。我保证，就这么简单。 前提是：在前三个小时里，你能按捺住你的好奇心，别问 Why 与 What。否则你学五个月都学不出来。 原理……” 阅读原文 三、第三篇文章摘录 《我的世界观（二）》 文章摘自微信公众号「Lazy-Thought」懒人在思考 几个黑客在维护，都很懒，都想改变点什么 一门新知识。 了解这门知识的概要轮廓（大概了解：是什么、能做什么、为什么会存在）。 哪个群体创造/发展的这个知识，这个群体背后的八卦是什么（比如微积分，莱布尼茨和牛顿的八卦），看八卦能更好理解牛人们的思维。 原来是这样一门有趣的知识呀，开始深入学习。 查遍全球关键资料，我可不想听一家之言。 了解这门知识的关联知识是什么。 心中了然了，原来这门知识是这样的，还有几个XX问题没解决。 运用知识创造出有趣的或以前不存在的东西，如果能解决几个没解决的XX问题最好。 一抖身加入这个知识所在的圈子，成为圈内人。 用跨界思维给这个圈子带来新鲜感，成为圈内认可的人。 能运用这样的方法论算是一门大知识了，如果是小点的，少其中几步就行。 另外我再分享另一种思想：别着急什么都去学，把你最喜欢的最擅长的搞精通，就能悟“道”，这种“道”正是上面所说的“方法论”，它能让你快速掌握其他知识，从而加速扩充你的知识面。 阅读原文 四、学习笔记小提示做笔记的正确方式，千万不要仅仅把原文内容抄一遍。当然抄一遍或复制一份是可以的，但一定要写一些自己的思路、思考、感想、总结等，哪怕只有一个词，也是好的。这么做的原因是跟我们的*大脑运作原理有关。感兴趣的请google 针对上面三篇文章，我的判断是，这是我目前学习到的超棒的三个学习方法论，可以说有了这三个学习方法论，我就有自信用一年时间成长为一名全栈工程师。 在做到完全理解这三个方法论的前提下，马上开始动手实践，做就牛。 第一篇文章：最重要目的是赶紧找个让自己有强烈动力的实践目标，如：打造自己的作品，比如给每个咖啡馆 或 景点 或 便利店 或 超市 或 餐馆 或 个人品牌等， 做个微信小程序。 第二篇文章的最重要目的是消除学习一门技能的认知偏差，避免半途而废。因为大部分人在大部分情况下，半途而废的原因是方法不合理且没有意识到方法不合理，所以在一只脚刚入门，另外一只脚刚抬起来就被一盆冷水砸的崩溃了，亲身经历，相信我你并不孤独。陪伴在路上的全栈工程师。 第三篇文章的最重要目的是有个大局观，或者说是建立系统，当你埋头苦干数日，日拱一卒确实不易。时不时的跳出来，站在足够高的高处看看自己和周围环境，思路自然会清晰很多。结合这个方法论的9条，逐条找到属于自己的答案，答案是动态更新的。 在学习一门技能的路上，这三篇文章中的核心方法论，缺一不可。 做就牛，难道不是么？ 为了实践这三篇文章的方法论，我和东哥来了个一个月时间对赌： 对赌期限：2016/08/15~2016/09/15； 对赌内容：我做个网站并上线，东哥弹唱一首尤克里里歌曲（指弹，而非扫弦）； 对赌条件：为自己吹过的牛逼负责。如果你还有着一颗年轻的心，那么这一句话，就够了！ 作品展示： 我制作的网站：www.xiaotongalley.com（不要使用手机访问），提示，千万不要用手机访问，因为网站刚上线5天就被攻击篡改了，目前只能用电脑访问。直接上图： 网站1.0版： 网站2.0版： 东哥的尤克里里弹唱：视频-同桌的你-指弹 微信小程序通过一个月时间的实践，我们的判断是这些方法论是很有效的。当我还在考虑下一个阶段学习什么的时候，2016/9/21 微信小程序开始内侧，并开放开发文档、设计指南和开发者工具，我的判断是趋势来了，我要拥抱趋势，这样我才可以成长的更快。所以我马上开始进行下一个阶段的准备工作，收集资料和制定学习计划，在这个过程中我发现，通过以微信小程序开发为核心技能和突破口，我的判断是用一年时间可以成为一名全栈工程师。具体如下： 收集资料： 相关文章：至少看一遍，你一定会有收获的 《关于微信小程序（应用号），我能透露的几个细节》 《微信小程序来了，产品和运营就不需要跪求程序员了？》 《为什么你觉得只开发微信号是不行的？》 参考：知乎：HTML、CSS、JavaScript、PHP、 MySQL 的学习顺序是什么？ 制定学习计划 你说什么！都读到这了，你还没有点开微信小程序开发文档和小程序设计指南么？还不赶紧的，做就牛！ 2016/09/21~2017/09/21：成为全栈工程师一年计划 微信小程序：2016/09/21~2016/11/21 熟练掌握小程序开发的各个环节；由于我是零基础开始学习编程，所以跟着趋势跑，进步速度才会更快，就好比坐上火箭。而当下这个时间节点，微信小程序开发满足我的需求，以此为切入点，积累我的技术栈； 微信小程序开发文档 小程序设计指南 小程序开发者工具 腾讯云-从搭建一个微信小程序开始 github-腾讯 知乎-怎样使用 GitHub？ HTML 和 CSS：2016/08/21~2016/09/15 由于我在微信小程序开放之前，已经用了一个月时间学习 HTML 和 CSS，所以呢，可以把更多的时间去学习微信小程序开发，如果你没有任何这方面的基础，那么我建议 HTML、CSS 和微信小程序开发同步学习； 学习 HTML 和 CSS， 这两个东西是一套的, 非常容易理解, 把w3school上面的教程过一遍就会了, 记住要一个个过, 千万不要偷懒, 一旦开始偷懒, 你会越来越偷懒, 最后什么都没学成。 在线教程：HTML 教程， CSS 教程； 书籍（有kindle电子版）：《HTML5与CSS3基础教程(第8版》) JavaScript：2016/09/21~2017/09/21 在学习微信小程序时我就开始学习 JavaScript，你可能会问这么做同一时间是不是学习任务太多了，我是这样考虑的，以微信开发文档为主要学习突破口，如果遇到搞不懂的并且跟 JavaScript 有关系，那么我就会去查查相应教程，就好像查字典一样，你没必要马上去读完整部字典。 学 JavaScript, JavaScript 相比前 HTML 和 CSS 会难的多, 因为 JavaScript 才是一门正式的编程语言, 同样, w3school 的教程全过一遍, JavaScript 教程 教程过完了就可以买书看了, 强烈推荐一本超好入门书: 《JavaScript DOM编程艺术（第2版）》 (Jeremy Keith，Jeffrey Sambells)【摘要 书评 试读】 , 认真学, 多看 看完之后学jquery, 这个时候你基本能够了解语言库了, jquery 也直接过一遍w3school的教程, jQuery 教程。 jquery会了, 基本上你网页开发前端就已经入门了, 如果你学的扎实, 反复的看, 其实你就可以胜任前端开发的工作了, 不过浏览器兼容性还是解决不了的, 不过你目标不是前端工程师, 浏览器的兼容性不了解也无所谓. ajax：2016/11/21~2017/09/21 在你学习 JavaScript 的时候, 你可能就接触一些后端的东西, 没错, 就是 ajax。这个是需要后端返回数据的。这个时候你要开始学习php了, 入门php相比于js会更麻烦一些, 因为运行php需要有很多细节要处理, 所以一本好的入门书籍是非常重要的, 这个w3school上面的php帮不了什么忙了, 推荐一本书: 《php和mysql web开发（原书第4版）》 ([澳]威利，[澳]汤姆森)； 一些注意点，学习HTML，css，JavaScript的时候, 只要有浏览器就够了, 不需要装wamp, 编辑器推荐sublime，多用google， 多敲代码，尤其是多敲代码非常重要，不敲代码你什么都学不会。 其他的想起来再补充吧。 对于那些说加入xxx阵营的，不要理他们，直接在window上面学, php和apache对window的兼容性非常好, 完全可以从入门学到精通都无需碰linux。当然， 如果你网站最终上线的话，还是需要接触linux服务器进行部署。这个到需要部署的时候再说, 提前接触linux就是浪费时间。 如果你有耐心坚持个一年以上的话, 我会推荐HTML，css，JavaScript，apache，php，mysql 后三者是需要装软件的, 推荐wamp, 绝佳的一站式环境配置, WampServer, the web development platform on Windows 直接包括了apache, php, mysql三个软件, 省的自己一个一个装。 有不少人在评论里问mac os下对应的软件, 这里补充一下: XAMPP Installers and Downloads for Apache Friends 参考资料： 知乎：HTML、CSS、JavaScript、PHP、 MySQL 的学习顺序是什么？ 落忧 程序员 的回答收录于 编辑推荐 •7304 人赞同 编辑于 2014-02-16 323 条评论 感谢 学习程序开发的过程中，英语阅读能力问题顺便就搞定了，辅助阅读材料《十分钟后开始使用英语》； 可能：UI、摄影、后期处理的基本技能也学了； 五、如果你还是迟迟没有动手，那么往下看，三分钟时间。如果你没有编程基础，或者编程基础不够稳固，那么我推荐的方法是用 Markdown（使用方法） 把微信 小程序开发文档和小程序设计指南 从头到位打字一遍。 遇到不认识的单词，直接查询，并标注在相应段落，如： 这么做的好处是: 对于编程经验少、打字速度慢、不熟悉 Markdown 的我来说，可以更有效率的熟悉乃至上手，打字的过程中 眼、手、脑都在动； 太多细节之处是我第一遍看的时候没有注意到的，而动手打字的过程中，好多问题自然而然的解决了，比如如何在 Markdown 中制作表格、组件怎么使用等； 英语阅读能力越来越好，开发者文档写作格式越写越好，等等等，一箭多雕。 带着思考，在打字的过程中你会发现很多规律性的词汇、代码结构等，当你感受到越来越多的规律时，那么恭喜你，你大脑里的工作记忆区（思考和意识区域）里的知识开始进入长期记忆区（事实性和过程性知识）。这种规律或者说联系越来越多后，你想要忘记都难，还有就是随时随地地任你快速使用。补充一点，工作记忆区容量远远小于长期记忆区 。这也解释了为啥刚开始学习新知识新技能时很吃力，需要一段时间才能渡过大脑不够用（就是学习区）的阶段。 大脑记忆的简化模型 工作记忆（working memory），简单来说，就是我们当前正在意识、思考的区域，比如你正在看这篇文章，这篇文章的信息以及你正在思考的内容，都在你的工作记忆中。 长期记忆（long-term memory），顾名思义。我问你，你的初吻给了谁？你头脑中立马出现的那个人（搞不好是条哈士奇），这个过程就是信息从长期记忆提取到工作记忆的过程。在我问这个问题之前，这个信息没有在你的工作记忆中，它在你的长期记忆里。 阅读原文：《不明白大脑如何运作，自学是无效的》 延伸：动画片《头脑特工队 Inside Out (2015)》，要对自己好一些。 参考文章： 本人目前用的是有道云笔记，手机端和电脑端同步更新，支持的Markdown，可以满足需求； 《可能是目前最全面的Markdown写作解决方案》 ； 《文档与源码编写风格》 ——腾讯 饭每天都要吃，文章为啥不能再看一遍呢！ 陪伴在路上的全栈工程师，]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[微信小程序-全栈工程师-开启想象力]]></title>
      <url>%2F2016%2F12%2F03%2F%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98-%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E5%85%A8%E6%A0%88%E5%B7%A5%E7%A8%8B%E5%B8%88-%E5%BC%80%E5%90%AF%E6%83%B3%E8%B1%A1%E5%8A%9B%2F</url>
      <content type="text"><![CDATA[你最大的问题是想得太多，而做得太少。 或者 想象力成为你前进的最大瓶颈。 可以好好琢磨琢磨下，这两句话。 1. 准备好了吗？1.1 实例分（教）享（程），目的有两个方面： 对自己：相比较给自己看的笔记，做分享笔记我会更加用心，并且我会站在可能看我笔记的朋友的角度去思考，也是一种锻炼。 对读者：上一篇文章《微信小程序-新手另类上手方法-做就牛》，收到了好多读者朋友的反馈，谢谢你们，是你们给了我更多的动力。 今天的这篇文章是基础实例教程的第一篇。在我的认知里学习一门技能，实例教程才是最有用的，既可以在动手实践的过程中学习理论知识，还可以更有效地激发我无穷的想象力。 1.2 必备物料： 一台电脑 下载并安装好的小程序开发者工具，如图所示： 下载demo，如图所示： 这个 demo 是个压缩包文件，需要解压，解压到你觉得合适的位置，比如： 必看：小程序文档，分为两大部分，小程序开发文档和小程序设计指南。你一定要多看看，多回顾。 2. 好的开始，带来更多的想象2.1 新建空文件夹以我为例在 F:\微信小程序 目录下创建一个名字为 quickstart 的空的文件夹，如图所示： 2.2 微信Web开发者工具打开安装好的 微信Web开发者工具，并点击 添加项目，如图所示： 2.3 创建新项目点击 无AppID，填写 项目名称 为 quickstart（你也可以写其他名字），选择 项目目录， 就是刚才新建的哪个空文件夹 quickstart，然后点击 添加项目。如图所示： 2.4 更改标题名字更改标题名字，由 WeChat 更改 自己的名字，如图所示： 2.5 增加底部tabBar如图所示： 在 app.json 中所需增加的代码： 123456789101112131415161718,&quot;tabBar&quot;: &#123; &quot;color&quot;: &quot;#dddddd&quot;, &quot;selectedColor&quot;: &quot;#3cc51f&quot;, &quot;borderStyle&quot;: &quot;black&quot;, &quot;backgroundColor&quot;: &quot;#ffffff&quot;, &quot;list&quot;: [&#123; &quot;pagePath&quot;: &quot;pages/index/index&quot;, &quot;iconPath&quot;: &quot;image/wechat.png&quot;, &quot;selectedIconPath&quot;: &quot;image/wechatHL.png&quot;, &quot;text&quot;: &quot;宋鹏&quot; &#125;, &#123; &quot;pagePath&quot;: &quot;pages/index/index&quot;, &quot;iconPath&quot;: &quot;image/wechat.png&quot;, &quot;selectedIconPath&quot;: &quot;image/wechatHL.png&quot;, &quot;text&quot;: &quot;我不是宋鹏&quot; &#125;]&#125; 其实这篇文章写到这里就该结束了，因为这篇文章最重要的目的是开启想象力，先在自己的内心里种下一颗种子，所以这篇文章没有任何技术细节的分享。 希望这颗种子可以让你频临崩溃时挺过去。 2.6 寻找素材，给tabBar添加图片 都看到这里了，估计你快按捺不住那颗好奇的心了，那颗种子估计也快发芽了。 这其实就是我与小程序对话的过程，它（or他or她）似乎蛮友好的。虽然现在的我对它的语言不是十分了解，但我知道去哪里学习，怎么学习和大概用多少时间就可以掌握这门语言，想一想还是很开心的。我的朋友里又多了一类（不是人吧！）。相信你也可以感受到！ 2.7 如果你在学习过程中遇到问题了怎么办？2.7.1 反复看微信小程序开发文档，理解什么是 框架？什么是组件？什么是API？然后多敲代码，多看源码； 2.7.2 如果微信小程序开发文档找不到答案，那么花些时间把 HTML、CSS和JavaScript搞定。强烈建议与微信小程序开发同步学习。 学习 HTML 和 CSS， 这两个东西是一套的，非常容易理解， 把w3school上面的教程过一遍就会了， 记住要一个个过, 千万不要偷懒, 一旦开始偷懒, 你会越来越偷懒, 最后什么都没学成。在线教程：HTML 教程， CSS 教程；或者 书籍（有kindle电子版）：《HTML5与CSS3基础教程(第8版》) ； 一本超好入门书： 《JavaScript DOM编程艺术（第2版）》 (Jeremy Keith，Jeffrey Sambells)，书很薄，有事儿没事儿多看几遍，每一行代码都敲一遍，看看效果。吃透为止。 2.7.3 搜索引擎，能用谷歌最好，不行的话百度、必应等也可以，我们的目的是解决问题。知乎是个好地方，也可以搜索的。 3. 把玩儿 demo3.1 添加项目 3.2 随意操作用鼠标在电脑上把玩它，就像平时我们用手机一样，不用担心误操作或文件损毁，放心大胆的把玩吧！记得结合微信小程序开发文档找规律，当你发现越来越多的规律时，恭喜你又进步了。 3.3 到了这一步，我估计你的想象力都快跳出窗外了吧。3.4 记住这个体验接下来就是“打卡式”的刻意练习了，我昨天制定的打卡信息，供参考，后果自负（偷笑）： 当我找到为之奋斗的目标时，打卡等机械化行动确实很节约脑力劳动和时间成本。这也解释了好多大牛一年四季服装基本一样，好像都没有“换过”。当然这种穿着方式纯个人选择，你喜欢就好。本人现在的搭配是：牛仔裤+衬衫+MA-1飞行服。如果传统汉服采用新材料且款式好的话，我也会考虑的，看未来吧！ 每天必做：就叫“打卡”好了。如果当你连续学习微信小程序开发这文档两个个小时以上时，就算休息一会儿还是不想继续学习这个，那么这个时候我的做法是切换到其他平行的任务上，比如去学习HTML、CSS、GitHub使用方法、JavaScript或者其他。 3.4.1 写≥100行代码；小程序代码、HTML、CSS或JavaScript代码都可以。遇到示例代码，亲自敲一遍，每天的这≥100行代码千万不要复制粘贴，前辈们经常说要多敲代码。 3.4.2 微信小程序开发笔记：≥100字。我的建议是，写教程，好吧我承认我目前就是这么干的。我的第一篇文章两周前就开始写了，过去的两周时间每天都在查资料看文档，遇到好的内容就截取复制过来，用写笔记的方式把这些截取过来的内容归类，等到把这一阶段学会的时候，一篇完整的文章就出来了，当然好多细节地方还需要更改优化，不过整体框架是有的。 3.4.3 微信小程序新增/优化≥1个功能；比如我在网上看到某个我需要的效果或者功能，我会快速的把它里面的代码片段复制粘贴到我的文件里，试试看效果，然后微调。这个过程就像搭积木，会有快感。如果可以满足要求，那么我会重新敲一遍代码，方法论就是先模仿，再创造。引申出 罗子雄 《如何成为一名优秀的设计师》 3.4.4 走路：走路总时长≥60分钟； 3.4.5 随机输入：微信公众号、稀土掘金、知乎、谷歌、新生大学、得到等； 3.4.6 写日记：不限字数，好多时候都是零零散散的点子，也可能是某篇文章或笔记内容需要增减或修改。这个时候有道云笔记就派上用场了，随时随地同步。 3.5 因为你的方法和目标已经清晰，深入的做下去，做就牛。延伸：要要对自己好一些，请欣赏。 程《如何成为一名优秀的设计师：罗子雄@TEDxChongqing》，关键词：基础实例教 黑客题材电影《我是谁：没有绝对安全的系统 Who Am I - Kein System ist sicher (2014)》 4. 下一次分享预告：如何刻意练习微信小程序开发，一定会涉及到用工程学思维，将要达到的目标分解成若干个可执行的小目标。 参考资料： 熟练掌握小程序开发的各个环节；由于我是零基础开始学习编程，所以跟着趋势跑，进步速度才会更快，就好比坐上火箭。而当下这个时间节点，微信小程序开发满足我的需求，以此为切入点，积累我的技术栈； 微信小程序开发文档 小程序设计指南 小程序开发者工具 腾讯云-从搭建一个微信小程序开始 github-腾讯 知乎-怎样使用 GitHub？ 在线教程：HTML 教程， CSS 教程； 一本超好入门书: 《JavaScript DOM编程艺术（第2版）》 (Jeremy Keith，Jeffrey Sambells)，书很薄，有事儿没事儿多看几遍，每一行代码都敲一遍，看看效果。吃透为止。 《Web全栈工程师的自我修养》——余果，有Kindle电子版），这本书带给我的更多的收获，是思路上的，作者从工作实践中来的经验，很有指导意义。 也可以找些非官方的，更加丰富多彩的源码学习临摹，比如：微信小程序之知乎日报 《可能是目前最全面的Markdown写作解决方案》 ； 《文档与源码编写风格》 ——腾讯 饭每天都要吃，文章为啥不能再看一遍呢！ 陪伴在路上的全栈工程师，]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[如何找到最适合你的那一杯咖啡]]></title>
      <url>%2F2016%2F10%2F03%2F1.6%20%E5%88%86%E4%BA%AB%EF%BC%9A%E5%A6%82%E4%BD%95%E6%89%BE%E5%88%B0%E6%9C%80%E9%80%82%E5%90%88%E4%BD%A0%E7%9A%84%E9%82%A3%E4%B8%80%E6%9D%AF%E5%92%96%E5%95%A1%EF%BC%88%E8%A1%A8%E6%A0%BC%E6%94%B9%E4%B8%BA%E5%9B%BE%E7%89%87%E6%A0%BC%E5%BC%8F%E9%93%BE%E6%8E%A5%EF%BC%89%2F</url>
      <content type="text"><![CDATA[好的和好吃的区别？什么是好的牛排？ 我试着回答： 好的食材（有行业标准），好的设备、好的厨艺（人），缺一不可。当然，可能会有朋友说，环境也很重要啊！是的，环境、卫生等也很重要。如果排在前三位的话，那么我给出这三项，没有先后顺序，并列关系。 什么是好吃的牛排？ 我的回答： 自（老）己（子）喜欢吃的！ “好的咖啡是有行业评判标准的；而好喝的咖啡是个人主观喜好！一碗米饭如此，一道菜亦如此！” 说说我心目中的“好的牛排”，各个环节能做到90分以上的，在这个世界上确实不多。有日本寿司之神 小野二郎、天妇罗之神 早乙女哲哉等以此为代表的，其实这又回到了刚才的第一个问题”什么是好的牛排？“在我看来，他们做到了好的食材、好的设备、好的厨艺、好的环境、好的卫生、好的……当然也意味着不可复制……准确来说复制成本高的离谱！ 关于寿司之神 小野二郎，有个纪录片值得一看，想一想这个世界多么精彩，你点我啊 什么是咖啡的烘焙度呢？假设大家都吃过牛排！（考虑到有些朋友不吃牛肉，那就直接买不同烘焙度的咖啡来喝就好！） 我喜欢吃5成熟的，今儿个晚上具体要吃几成熟的牛排呢！看心情！当然也有些朋友只喜欢10成熟的或者0成熟（生的）牛排，anyway，你喜欢就好！ 你呢，喜欢吃几成熟的牛排？ 咖啡的烘焙度，就好比牛排是几成熟的。我们店里在用的是9成熟的，大陆的星巴克（以下称呼星爸爸）基本上都是10成熟的。 由于星爸爸在大陆的强大影响力，大部分人把星爸爸的咖啡当作一个标准。记得很清楚，我们小店刚开始营业时，我还卖6成熟咖啡豆做的咖啡，这种咖啡目前在大陆咖啡市场还是比较小众，而在世界咖啡之都墨尔本可是主流之一的哦，在墨尔本越来越多的顾客开始喝少量的牛奶，比如一杯牛奶咖啡（拿铁or澳白or卡布）从早些年的360ml/杯，到现在的 300ml/杯，甚至更小的杯形，顾客的目的就是要喝到更浓厚的咖啡和更少的牛奶。 读到这里，你可能想要知道不同烘焙度（几成熟的）的咖啡味道口感有啥区别？对了，还有咖啡因含量。 如下表（1.6.1）： 注： 综上，6成熟~10成熟，味道和口感的变化规律一目了然； “6成熟”的咖啡，在不加糖的情况下，是酸酸甜甜的，咖啡因含量基本不变，只不过还是会有淡淡的苦味！这可能跟我们平时喝的星爸（巴）爸（克）不太一样，可能更容易接受些。严谨一点，补充一句，有些星巴克是提供不同烘焙度的咖啡的。 这就好比：1斤10成熟的牛肉和1斤5成熟的牛肉，哪个重？ 哦，不不不，是哪个味道口感更重？ 这个话题值得思考，答案是手机（或电脑）那面的你，可以考虑今晚买一斤牛肉，10成熟的称2两，5成熟的称2两，对比着尝尝看，可以根据牛排的： 综合感受（是否喜欢，有多喜欢）； 外观色泽； 味道如何； 香气浓淡； 口感； 严重提示：注意先后顺序，综合感受 尽量第一时间纪录下来。 这些信息建议分别纪录下来，有机会的话记得告诉我哦。 这个方法可以类比到各种美食（吃吃喝喝的）。 如何找到最适合你的那一杯？如下表（1.6.2），是以主流经典的咖啡为例： 再举个生活中的例子：美好的一天开始了，早上上班的路上，需要一杯“办公神器”咖啡，即不想喝加糖的饮品（在减肥），又不喜欢苦苦的咖啡（苦是刻在基因里的不喜欢），还有咖啡因含量要适中。 根据这篇文章中的两个表格，给你的建议是喝牛奶咖啡（澳白、拿铁、卡布奇诺）或者6成熟咖啡豆制作的美式咖啡；当然还需注意的是，如果你对牛奶乳糖不耐受，那么考虑喝豆浆拿铁。 一般来说，只要不是对咖啡因特别敏感的人，1~3杯/天一点问题没有，毫不夸张的说它是办公神奇之一。话又说回来，人类喝咖啡也有上千年的历史了！ 还有需要特别注意的是咖啡因在人体里的作用峰值在4小时左右，因人而异，所以睡前4小时内就不要饮用为好。 如果感兴趣，那么可以找些靠谱的书籍来读。比如：《咖啡无罪的101个理由》作者：卫生部健康教育首席专家胡大一、前世界心脏联盟主席马拉奥、咖啡专家里马为咖啡翻案而联合推出惊人之作。《精品咖啡学（上下册）》作者：韩怀宗……还有很多好书，我就不拉书单了，容易拉仇恨！想要的找我私聊，私人定制需求发给你书单哈。 小结：如果制作1杯咖啡的咖啡粉重量相同，那么这杯咖啡中咖啡因含量可以粗略算做相同。跟味道口感没有直接关系。 所以呢，下次去买咖啡就这么点：来杯5成熟的牛排，外加一杯7成熟的咖啡，谢谢。 我这个人一聊咖啡就话痨，见谅！ 如果手机或电脑那边的你，通过这篇文章可以相对容易的找到适合你的那杯咖啡，那么我的目的就达到了。 吃的也好、喝的也罢，里面好多道理是相通的。比如说川菜的辣（触感），当你第一次吃这么辣的菜时，可能会觉得只有辣，当你接受这种辣之后，你会更在意这么辣的菜里的鲜，而鲜是川菜里最重要的味道； 这就跟第一次喝咖啡很相似，这么苦的咖啡，可能当时的你会觉得只有苦。当你接受这种苦味之后，你会更在意当时“这么苦”的咖啡里的千香万味。咖啡是大自然中最芳香的食材，没有之一。苦味是刻在人类基因里的，因为在很久很久以前，人类分辨食物是否有毒的能力有限，那时的人类会把苦味的食物当作有毒的。随着时间的推移，一些苦味的没有毒的食物走进了人类的餐桌上。 与第一次吃辣的食物、第一次喝咖啡类似的体验，还有很多：比如你第一次吃榴莲、第一次喝啤酒、第一次喝白酒、第一次……当你多次食用之后，可能会喜欢上其中的几种甚至所有，有一种说法来解释这个现象，叫“味蕾打开论”，感兴趣的朋友可以去查查看。 “这个世界上没有最好（行业标准100分）的咖啡，只有最适合你（你喜欢的）的那一杯。”——前辈们说 还记得吗：“好的咖啡是有行业评判标准的；而好喝的咖啡是个人主观喜好！一碗米饭如此，一道菜亦如此！”]]></content>
    </entry>

    
  
  
</search>
